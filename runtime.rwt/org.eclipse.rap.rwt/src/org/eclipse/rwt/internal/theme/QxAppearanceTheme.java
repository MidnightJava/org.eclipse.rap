/*******************************************************************************
 * Copyright (c) 2007, 2011 Innoopract Informationssysteme GmbH and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Innoopract Informationssysteme GmbH - initial API and implementation
 *    EclipseSource - ongoing development
 ******************************************************************************/
package org.eclipse.rwt.internal.theme;


public final class QxAppearanceTheme {

  private final String id;
  private final String title;
  private final String base;
  private final StringBuilder code;
  private boolean headWritten;
  private boolean tailWritten;
  private boolean valueWritten;

  public QxAppearanceTheme( String id, String title, String base ) {
    this.id = id;
    this.title = title;
    this.base = base;
    code = new StringBuilder();
    headWritten = false;
    tailWritten = false;
    valueWritten = false;
  }

  public void appendAppearances( String values ) {
    beforeWriteValue();
    code.append( values );
    afterWriteValue();
  }

  public String getJsCode() {
    if( !headWritten ) {
      writeHead();
    }
    if( !tailWritten ) {
      writeTail();
    }
    return code.toString();
  }

  private void beforeWriteValue() {
    if( !headWritten ) {
      writeHead();
    }
    if( tailWritten ) {
      throw new IllegalStateException( "Tail already written" );
    }
    if( valueWritten ) {
      code.append( ",\n" );
    }
  }

  private void afterWriteValue() {
    valueWritten = true;
  }

  private void writeHead() {
    code.append( "/* RAP theme file generated by QxTheme. */\n" );
    code.append( "qx.Theme.define( \"" );
    code.append( id );
    code.append( "\", {\n  title : \"" );
    code.append( title );
    code.append( "\",\n" );
    if( base != null ) {
      code.append( "  extend : " + base + ",\n" );
    }
    code.append( "  appearances : {\n" );
    headWritten = true;
  }

  private void writeTail() {
    code.append( "\n" );
    code.append( "  }\n" );
    code.append( "} );\n" );
    tailWritten = true;
  }

}
