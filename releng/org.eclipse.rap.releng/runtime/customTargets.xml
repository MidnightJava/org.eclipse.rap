<project name="Build specific targets and properties" default="noDefault">

  <!-- ===================================================================== -->
  <!-- Run a given ${target} on all elements being built -->
  <!-- Add on <ant> task for each top level element being built. -->
  <!-- ===================================================================== -->
  <property name="allElementsFile" value="${builder}/allElements.xml" />
  <import file="${allElementsFile}" />
  <target name="allElements">
    <antcall target="allElementsDelegator" />
  </target>

  <!-- ===================================================================== -->
  <!-- Check out map files from correct repository -->
  <!-- Replace values for mapsCheckoutTag as desired. -->
  <!-- ===================================================================== -->
  <target name="getMapFiles" depends="checkLocalMaps" unless="skipMaps">
    <cvs cvsRoot="${mapsRepo}" package="${mapsRoot}" dest="${buildDirectory}/maps" tag="${mapsCheckoutTag}" />
  </target>

  <target name="checkLocalMaps">
    <available property="skipMaps" file="${buildDirectory}/maps" />
  </target>

  <target name="clean" unless="noclean">
    <antcall target="allElements">
      <param name="target" value="cleanElement" />
    </antcall>
  </target>

  <target name="gatherLogs">
    <mkdir dir="${buildDirectory}/${buildLabel}/compilelogs" />
    <antcall target="allElements">
      <param name="target" value="gatherLogs" />
    </antcall>
    <unzip dest="${buildDirectory}/${buildLabel}/compilelogs" overwrite="true">
      <fileset dir="${buildDirectory}/features">
        <include name="**/*.log.zip" />
      </fileset>
    </unzip>
  </target>

  <!-- ===================================================================== -->
  <!-- Steps to do before setup -->
  <!-- ===================================================================== -->
  <target name="preSetup">
    <!-- tidy up before build to clean broken build -->
    <antcall target="tidyup" />
  </target>

  <!-- ===================================================================== -->
  <!-- Steps to do after generating the build scripts. -->
  <!-- ===================================================================== -->
  <target name="postGenerate">
    <antcall target="clean" />
  </target>

  <!-- ===================================================================== -->
  <!-- Steps to do after the build is done. -->
  <!-- ===================================================================== -->
  <target name="postBuild">
    <antcall target="finish" />
  </target>

  <target name="assembleTarget">
    <property name="targetLocation" value="${buildDirectory}/${buildLabel}/target" />
    <property name="rap-feature" value="${buildDirectory}/${buildLabel}/org.eclipse.rap.runtime.sdk-${buildId}.zip" />

    <unzip src="${rap-feature}" dest="${targetLocation}" />

    <!-- checks if ICU base is available and fails otherwise -->
    <pathconvert property="icuBaseAvailable" setonempty="false" pathsep=" ">
      <path>
        <fileset dir="${baseLocation}/plugins" includes="com.ibm.icu.base*" />
      </path>
    </pathconvert>
    <fail unless="icuBaseAvailable" message="ICU base is not available in base platform." />
    
    <!-- zip target -->
    <zip destfile="${buildDirectory}/${buildLabel}/${buildLabel}.zip">
      <fileset dir="${targetLocation}" />
    </zip>

  </target>

  <!-- ===================================================================== -->
  <!-- Steps to do to publish the build results -->
  <!-- ===================================================================== -->
  <target name="publish">
    <property name="buildOutputDirectory" value="${outputDirectory}/${buildType}-${buildId}" />

    <mkdir dir="${outputDirectory}" />
    <mkdir dir="${buildOutputDirectory}" />

    <!-- copy target zip -->
    <copy todir="${buildOutputDirectory}">
      <fileset dir="${buildDirectory}/${buildLabel}">
        <include name="${buildLabel}.zip" />
      </fileset>
    </copy>
  </target>

  <target name="tidyup">
    <echo message="Deleting all working resources" />
    <delete dir="${buildDirectory}" includeEmptyDirs="true" defaultexcludes="false" />
  </target>

  <target name="finish" depends="gatherLogs,assembleTarget,publish,tidyup">
  </target>

  <!-- ===================================================================== -->
  <!-- Default target                                                        -->
  <!-- ===================================================================== -->
  <target name="noDefault">
    <echo message="You must specify a target when invoking this file" />
  </target>

  <!-- not used targets -->
  <target name="tagMapFiles" if="tagMaps"></target>
  <target name="postSetup"></target>
  <target name="preFetch"></target>
  <target name="postFetch"></target>
  <target name="preGenerate"></target>
  <target name="preProcess"></target>
  <target name="postProcess"></target>
  <target name="preAssemble"></target>
  <target name="postAssemble"></target>
  <target name="prePackage"></target>
  <target name="postPackage"></target>
</project>
